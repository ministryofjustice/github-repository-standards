#!/usr/bin/env ruby

require_relative "../lib/repository_checker"

class RepositoryChecker
  include HelperModule

  def start
    results = get_repos.map { |hash| GithubRepositoryStandards::StandardsReport.new(hash).report }

    # results.each do |repo|
    #   if repo[:status] == FAIL && repo[:report][:issues_section_enabled]
    #     if repo[:report][:default_branch_main] == false
    #       create_default_branch_issue(repo[:name])
    #     end

    #     if repo[:report][:requires_approving_reviews] == false
    #       create_requires_approving_reviews_issue(repo[:name])
    #     end

    #     if repo[:report][:administrators_require_review] == false
    #       create_include_administrators_issue(repo[:name])
    #     end

    #     if repo[:report][:has_require_approvals_enabled] == false
    #       create_require_approvals_issue(repo[:name])
    #     end
    #   end
    # end

    write_public_data(results)
    write_private_data(results)
  end
end

puts "Start"
RepositoryChecker.new.start
puts "Finished"
