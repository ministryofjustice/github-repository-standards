#!/usr/bin/env ruby

require "json"
require "net/http"
require "uri"
require "octokit"
require "time"

require_relative "../lib/github_graph_ql_client"
require_relative "../lib/repositories"
require_relative "../lib/standards_report"
require_relative "../lib/issue_creator"

graphql = GithubGraphQlClient.new(github_token: ENV.fetch("ADMIN_GITHUB_TOKEN"))

results = Repositories.new(graphql: graphql).list.map { |hash| StandardsReport.new(hash).report }

results.each do |x|
    if x[:issues_enabled] == false
        # Log a repository has the Issues section turned off
        File.open("output.txt", "a") { |file| file.write("Issues disabled in repository: #{x[:name]} \n") }
    elsif x[:default_branch] != "main"
        # Create a repository issue if the repository default branch is not set to main
        params = {
            owner: "ministryofjustice",
            repository: x[:name],
            github_user: "ministryofjustice"
        }
        GithubRepositoryStandards::IssueCreator.new(params).create_issue
    end
end

puts({
    data: results,
    updated_at: Time.now
}.to_json)
